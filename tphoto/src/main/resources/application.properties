################# mysql 基础配置 #################
#spring.datasource.url=jdbc:mysql://119.23.56.49:3306/youm?useUnicode=true&characterEncoding=UTF-8&useSSL=true
spring.datasource.url=jdbc:mysql://211.159.215.250:63628/youm?useUnicode=true&characterEncoding=UTF-8&useSSL=true
spring.datasource.username=root
#spring.datasource.password=19940601
spring.datasource.password=jsmx521_
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

################# redis 基础配置 #################
spring.redis.database=5 
spring.redis.host=119.23.56.49
spring.redis.password=
spring.redis.port=6379
# 连接超时时间 单位 ms（毫秒）
spring.redis.timeout=3000
################# redis 线程池设置 ###############
# 连接池中的最大空闲连接，默认值也是8。
spring.redis.jedis.pool.max-idle=500
#连接池中的最小空闲连接，默认值也是0。
spring.redis.jedis.pool.min-idle=50
# 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
spring.redis.jedis.pool.max-active=2000
# 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
spring.redis.jedis.pool.max-wait=1000


server.tomcat.max-http-header-size=30000000
#################################################日志####################################################
#com.mycompany.mavenspringboot.controller 日志 WARN级别输出
logging.level.com.bs.tphoto.controller=WARN  
#com.mycompany.mavenspringboot.mapper sql日志 DEBUG级别输出
logging.level.com.bs.tphoto.dao=DEBUG  
logging.file=logs/spring-boot-logging.log  
logging.pattern.console=%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n  
logging.pattern.file=%d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n  

mybatis.configuration.map-underscore-to-camel-case=true
